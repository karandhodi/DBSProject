DELIMITER $$



CREATE PROCEDURE CUSTO_STATUS_UPDATE (IN C_ID INT UNSIGNED) 
BEGIN
DECLARE C_PURCHASES INT UNSIGNED DEFAULT 0;
SELECT TOTAL_PURCHASES INTO C_PURCHASES
FROM CUSTOMER
WHERE CUSTOMER_ID=C_ID;


IF C_PURCHASES <2500 THEN
    UPDATE CUSTOMER
    SET TYPE = 'SILVER'
    WHERE CUSTOMER_ID=C_ID;
END IF;
IF C_PURCHASES >2500 AND C_PURCHASES <5000 THEN
    UPDATE CUSTOMER
    SET TYPE = 'GOLD'
    WHERE CUSTOMER_ID=C_ID;
END IF;
IF C_PURCHASES >5000 THEN
    UPDATE CUSTOMER
    SET TYPE = 'PLATINUM'
    WHERE CUSTOMER_ID=C_ID;
END IF;
END $$

DELIMITER ;




create table admins(
	`name` varchar(50) not null,
	`salary` int not null,
	`outlet_id` int not null,
	`a_id` int not null,
	`a_username` varchar(20) not null,
	`a_password` varchar(20) not null,
	primary key(a_id),
	foreign key(outlet_id) references outlets(outlet_id)
);

create table bill(
	`bill_no` int not null,
	`customer_id` int not null,
	`total_amount` int not null,
	`date` date not null,
	`issued_at` int not null,
	primary key(bill_no),
	foreign key(customer_id) references customer(customer_id),
	foreign key(issued_at) references outlets(outlet_id) 
);

create table cashier(
	`name` varchar(50) not null,
	`salary` int not null,
	`outlet_id` int not null,
	`c_id` int not null,
	`c_username` varchar(20) not null,
	`c_password` varchar(20) not null,
	primary key(c_id),
	foreign key(outlet_id) references outlets(outlet_id)
);

create table customer(
	`name` varchar(30) not null,
	`customer_id` int not null,
	`type` varchar(30) not null,
	`total_purchases` int not null,
	primary key(customer_id)
);

create table outlets(
	`outlet_id` int not null,
	`o_name` varchar(20) not null,
	`o_location` varchar(20) not null,
	primary key(outlet_id)
);

create table sold(
	`quantity` int not null,
	`bill_no` int not null,
	`article_id` int not null,
	primary key(bill_no, article_id)
);

create table stock(
	`name` varchar(50) not null,
	`type` varchar(20) not null,
	`manufacturer` varchar(20) not null,
	`quantity` int not null,
	`article_id` int not null,
	`mrp` int not null,
	primary key(article_id)
);

create table supplierorders(
	`s_bill` int not null,
	`supplier_id` int not null,
	`date` date not null,
	`article_id` int not null,
	primary key(s_bill, supplier_id),
	foreign key(supplier_id) references suppliers(supplier_id),
	foreign key(article_id) references stock(artice_id)
);

create table suppliers(
	`supplier_id` int not null,
	`name` varchar(50) not null,
	primary key(supplier_id)
);










